/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { useTrimeshCollision } from "spacesvr";

type GLTFResult = GLTF & {
  nodes: {
    cart: THREE.Mesh;
    tables: THREE.Mesh;
    tables2: THREE.Mesh;
    kiosk: THREE.Mesh;
    floors: THREE.Mesh;
    floors_cover: THREE.Mesh;
    additions: THREE.Mesh;
    collider: THREE.Mesh;
  };
  materials: {
    ["cart.mat"]: THREE.MeshStandardMaterial;
    ["tables.mat"]: THREE.MeshStandardMaterial;
    ["tables2.mat"]: THREE.MeshStandardMaterial;
    ["kiosk.mat"]: THREE.MeshStandardMaterial;
    ["floors.mat"]: THREE.MeshStandardMaterial;
    ["additions.mat"]: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/LucidMonday_02-1627589279/LucidMonday_TestOptimization_02.glb.gz";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;

  useTrimeshCollision(nodes.collider.geometry.clone());

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <mesh
          name="cart"
          geometry={nodes.cart.geometry}
          material={materials["cart.mat"]}
          scale={[100, 100, 100]}
        />
        <mesh
          name="tables"
          geometry={nodes.tables.geometry}
          material={materials["tables.mat"]}
        />
        <mesh
          name="tables2"
          geometry={nodes.tables2.geometry}
          material={materials["tables2.mat"]}
        />
        <mesh
          name="kiosk"
          geometry={nodes.kiosk.geometry}
          material={materials["kiosk.mat"]}
          scale={0.65}
          position={[4, 0, 4]}
        />
        <mesh
          name="floors"
          geometry={nodes.floors.geometry}
          material={nodes.floors.material}
        />
        <mesh
          name="floors_cover"
          geometry={nodes.floors_cover.geometry}
          material={nodes.floors_cover.material}
        />
        <mesh
          name="additions"
          geometry={nodes.additions.geometry}
          material={materials["additions.mat"]}
        />
        {/*<mesh name="collider" geometry={nodes.collider.geometry} material={nodes.collider.material} />*/}
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
