/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { DRACO_URL } from "spacesvr";

type GLTFResult = GLTF & {
  nodes: {
    instaicon: THREE.Mesh;
    instabutton: THREE.Mesh;
    instabase: THREE.Mesh;
  };
  materials: {
    ["insta.icon"]: THREE.MeshStandardMaterial;
    ["insta.button"]: THREE.MeshStandardMaterial;
    ["insta.base"]: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/instagram-1607643678/instagram.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL, DRACO_URL) as GLTFResult;

  materials["insta.icon"].metalness = 0.1;
  materials["insta.button"].metalness = 0.1;
  materials["insta.base"].metalness = 0.1;

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <mesh
          name="instaicon"
          material={materials["insta.icon"]}
          geometry={nodes.instaicon.geometry}
        />
        <mesh
          name="instabutton"
          material={materials["insta.button"]}
          geometry={nodes.instabutton.geometry}
        />
        <mesh
          name="instabase"
          material={materials["insta.base"]}
          geometry={nodes.instabase.geometry}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL, DRACO_URL);
