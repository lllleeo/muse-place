/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { DRACO_URL } from "spacesvr";
import { Color } from "three";

type GLTFResult = GLTF & {
  nodes: {
    stand: THREE.Mesh;
    light: THREE.Mesh;
    structure: THREE.Mesh;
    middleSupports: THREE.Mesh;
    metal: THREE.Mesh;
    glass: THREE.Mesh;
  };
  materials: {
    metal: THREE.MeshStandardMaterial;
    light: THREE.MeshStandardMaterial;
    structure: THREE.MeshStandardMaterial;
    middleSupports: THREE.MeshStandardMaterial;
    glass: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/Structure-1607773998/structure_05.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL, DRACO_URL) as GLTFResult;

  materials.light.emissive = new Color(0x0000ff);
  materials.light.emissiveIntensity = 3;

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <mesh
          name="stand"
          material={materials.metal}
          geometry={nodes.stand.geometry}
        />
        <mesh
          name="light"
          material={materials.light}
          geometry={nodes.light.geometry}
        />
        <mesh
          name="structure"
          material={materials.structure}
          geometry={nodes.structure.geometry}
        />
        <mesh
          name="middleSupports"
          material={materials.middleSupports}
          geometry={nodes.middleSupports.geometry}
        />
        <mesh
          name="metal"
          material={materials.metal}
          geometry={nodes.metal.geometry}
        />
        <mesh
          name="glass"
          material={materials.glass}
          geometry={nodes.glass.geometry}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL, DRACO_URL);
