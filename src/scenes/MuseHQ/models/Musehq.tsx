/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { Interactable, useTrimeshCollision } from "spacesvr";
import { BufferGeometry } from "three";
import Trigger from "../modifiers/Trigger";

type GLTFResult = GLTF & {
  nodes: {
    wallsa: THREE.Mesh;
    wallsb: THREE.Mesh;
    floor: THREE.Mesh;
    supports: THREE.Mesh;
    pedestal: THREE.Mesh;
    railing: THREE.Mesh;
    balcony: THREE.Mesh;
    balconysupport: THREE.Mesh;
    balconyrailing: THREE.Mesh;
    windows: THREE.Mesh;
    table: THREE.Mesh;
    doors: THREE.Mesh;
    couch: THREE.Mesh;
    banner: THREE.Mesh;
    misc: THREE.Mesh;
    fans: THREE.Mesh;
    stilts: THREE.Mesh;
    ["shelf-objects"]: THREE.Mesh;
    ["lucid-hitbox"]: THREE.Mesh;
    lucid: THREE.Mesh;
    ["balloonski-hitbox"]: THREE.Mesh;
    balloonski: THREE.Mesh;
    ["kira-hitbox"]: THREE.Mesh;
    kira: THREE.Mesh;
    ["highrise-hitbox"]: THREE.Mesh;
    highrise: THREE.Mesh;
    collider: THREE.Mesh;
  };
  materials: {
    ["wall.a2.mat"]: THREE.MeshStandardMaterial;
    ["wall.b2.mat"]: THREE.MeshStandardMaterial;
    ["floor.mat"]: THREE.MeshStandardMaterial;
    ["supports2.mat"]: THREE.MeshStandardMaterial;
    ["pedestal.mat"]: THREE.MeshStandardMaterial;
    ["railing.mat"]: THREE.MeshStandardMaterial;
    ["balcony.mat"]: THREE.MeshStandardMaterial;
    ["balcony.support.mat"]: THREE.MeshStandardMaterial;
    ["balcony.railing.mat"]: THREE.MeshStandardMaterial;
    ["windows.mat"]: THREE.MeshStandardMaterial;
    ["table.mat"]: THREE.MeshStandardMaterial;
    ["doors.mat"]: THREE.MeshStandardMaterial;
    ["couch.mat"]: THREE.MeshStandardMaterial;
    ["banner.mat"]: THREE.MeshStandardMaterial;
    ["misc.mat"]: THREE.MeshStandardMaterial;
    ["telescope.mat"]: THREE.MeshStandardMaterial;
    ["stilts.mat"]: THREE.MeshStandardMaterial;
    ["shelf_objects.mat"]: THREE.MeshStandardMaterial;
    lucid: THREE.MeshStandardMaterial;
    ["ghost.mat"]: THREE.MeshStandardMaterial;
    ["kira.mat"]: THREE.MeshStandardMaterial;
    ["highrise.mat"]: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/Musehq-1622084161/musehq_06.glb.gz";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;

  const SCALE = 0.6;

  // useTrimeshCollision(
  //   (nodes.collider.geometry as BufferGeometry)
  //     .clone()
  //     .scale(SCALE, SCALE, SCALE)
  // );

  return (
    <group ref={group} {...props} dispose={null} name="musehq">
      <group name="Scene" scale={SCALE}>
        <group>
          <mesh
            name="wallsa"
            geometry={nodes.wallsa.geometry}
            material={materials["wall.a2.mat"]}
          />
          <mesh
            name="wallsb"
            geometry={nodes.wallsb.geometry}
            material={materials["wall.b2.mat"]}
          />
          <mesh
            name="floor"
            geometry={nodes.floor.geometry}
            material={materials["floor.mat"]}
          />
          <mesh
            name="supports"
            geometry={nodes.supports.geometry}
            material={materials["supports2.mat"]}
          />
          <mesh
            name="pedestal"
            geometry={nodes.pedestal.geometry}
            material={materials["pedestal.mat"]}
          />
          <mesh
            name="railing"
            geometry={nodes.railing.geometry}
            material={materials["railing.mat"]}
          />
          <mesh
            name="balcony"
            geometry={nodes.balcony.geometry}
            material={materials["balcony.mat"]}
          />
          <mesh
            name="balconysupport"
            geometry={nodes.balconysupport.geometry}
            material={materials["balcony.support.mat"]}
          />
          <mesh
            name="balconyrailing"
            geometry={nodes.balconyrailing.geometry}
            material={materials["balcony.railing.mat"]}
          />
          <mesh
            name="windows"
            geometry={nodes.windows.geometry}
            material={materials["windows.mat"]}
          />
          <mesh
            name="table"
            geometry={nodes.table.geometry}
            material={materials["table.mat"]}
            position={[-4.2379, 10.6103, -3.2352]}
          />
          <mesh
            name="doors"
            geometry={nodes.doors.geometry}
            material={materials["doors.mat"]}
          />
          <mesh
            name="couch"
            geometry={nodes.couch.geometry}
            material={materials["couch.mat"]}
          />
          <mesh
            name="banner"
            geometry={nodes.banner.geometry}
            material={materials["banner.mat"]}
          />
          <mesh
            name="misc"
            geometry={nodes.misc.geometry}
            material={materials["misc.mat"]}
          />
          <mesh
            name="fans"
            geometry={nodes.fans.geometry}
            material={materials["telescope.mat"]}
            position={[-0.0369, 15.9555, 6.2338]}
          />
          <mesh
            name="stilts"
            geometry={nodes.stilts.geometry}
            material={materials["stilts.mat"]}
          />
          <mesh
            name="shelf-objects"
            geometry={nodes["shelf-objects"].geometry}
            material={materials["shelf_objects.mat"]}
          />
          <Trigger
            onClick={() =>
              window.open("https://muse.place/lucidmonday", "_blank")
            }
          >
            <mesh
              name="lucid"
              geometry={nodes.lucid.geometry}
              material={materials.lucid}
            />
            <mesh
              visible={false}
              name="lucid-hitbox"
              geometry={nodes["lucid-hitbox"].geometry}
              material={nodes["lucid-hitbox"].material}
            />
          </Trigger>
          <Trigger
            onClick={() =>
              window.open("https://muse.place/balloonski", "_blank")
            }
          >
            <mesh
              name="balloonski"
              geometry={nodes.balloonski.geometry}
              material={materials["ghost.mat"]}
            />
            <mesh
              visible={false}
              name="balloonski-hitbox"
              geometry={nodes["balloonski-hitbox"].geometry}
              material={nodes["balloonski-hitbox"].material}
            />
          </Trigger>
          <Trigger
            onClick={() =>
              window.open("https://muse.place/kirax23/alto", "_blank")
            }
          >
            <mesh
              name="kira"
              geometry={nodes.kira.geometry}
              material={materials["kira.mat"]}
            />
            <mesh
              visible={false}
              name="kira-hitbox"
              geometry={nodes["kira-hitbox"].geometry}
              material={nodes["kira-hitbox"].material}
            />
          </Trigger>
          <Trigger
            onClick={() => window.open("https://muse.place/highrise", "_blank")}
          >
            <mesh
              name="highrise"
              geometry={nodes.highrise.geometry}
              material={materials["highrise.mat"]}
              scale={[7.5, 7.5, 7.5]}
            />
            <mesh
              visible={false}
              name="highrise-hitbox"
              geometry={nodes["highrise-hitbox"].geometry}
              material={nodes["highrise-hitbox"].material}
            />
          </Trigger>
          {/*<mesh name="collider" geometry={nodes.collider.geometry} material={nodes.collider.material} />*/}
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
