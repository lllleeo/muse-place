/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { DRACO_URL } from "spacesvr";

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
    mesh_0_1: THREE.Mesh;
  };
  materials: {};
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/Shed-1615110042/Shed.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL, DRACO_URL) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={[0.9, 0.9, 0.9]}>
        <group position-y={1.28}>
          <mesh
            name="mesh_0"
            material={nodes.mesh_0.material}
            geometry={nodes.mesh_0.geometry}
          />
          <mesh
            name="mesh_0_1"
            material={nodes.mesh_0_1.material}
            geometry={nodes.mesh_0_1.geometry}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL, DRACO_URL);
