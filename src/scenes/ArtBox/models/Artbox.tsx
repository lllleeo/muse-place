/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useMemo, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { MeshStandardMaterial } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Clean_Model_1: THREE.Mesh;
  };
  materials: {
    diffuse_Black: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/ArtBox-1620419603/artbox.glb.gz";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;

  const mat = useMemo(() => new MeshStandardMaterial(), []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" scale={0.8}>
        <mesh
          name="Clean_Model_1"
          geometry={nodes.Clean_Model_1.geometry}
          material={mat}
          rotation={[Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
