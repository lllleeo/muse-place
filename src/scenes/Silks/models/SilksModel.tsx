/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { DRACO_URL, useTrimeshCollision } from "spacesvr";
import { BufferGeometry } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Logo: THREE.Mesh;
    wallDecor: THREE.Mesh;
    Durags: THREE.Mesh;
    Kiosk: THREE.Mesh;
    Speakers: THREE.Mesh;
    Rug: THREE.Mesh;
    topCeiling: THREE.Mesh;
    Walls: THREE.Mesh;
  };
  materials: {
    ["Cube.1"]: THREE.MeshStandardMaterial;
    ["vp logo wall"]: THREE.MeshStandardMaterial;
    ["durag skull"]: THREE.MeshStandardMaterial;
    Box008: THREE.MeshStandardMaterial;
    speaker: THREE.MeshStandardMaterial;
    Cylinder: THREE.MeshStandardMaterial;
    topCeiling: THREE.MeshStandardMaterial;
    walls: THREE.MeshStandardMaterial;
  };
};

const FILEURL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/test_16-1612513316/00.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILEURL, DRACO_URL) as GLTFResult;

  const SCALE = 3;

  useTrimeshCollision(
    (nodes.Walls.geometry as BufferGeometry)
      .clone()
      .scale(SCALE, SCALE, SCALE)
      .translate(0, -0.16, 0)
  );

  useTrimeshCollision(
    (nodes.Kiosk.geometry as BufferGeometry)
      .clone()
      .scale(SCALE, SCALE, SCALE)
      .translate(0, -0.16, 0)
  );

  return (
    <group ref={group} {...props}>
      <group position-y={-0.16}>
        <group scale={[SCALE, SCALE, SCALE]}>
          <mesh
            material={materials["Cube.1"]}
            geometry={nodes.Logo.geometry}
            name="Logo"
          />
          <mesh
            material={materials["vp logo wall"]}
            geometry={nodes.wallDecor.geometry}
            name="wallDecor"
          />
          <mesh
            material={materials["durag skull"]}
            geometry={nodes.Durags.geometry}
            name="Durags"
          />
          <mesh
            material={materials.Box008}
            geometry={nodes.Kiosk.geometry}
            name="Kiosk"
          />
          <mesh
            material={materials.speaker}
            geometry={nodes.Speakers.geometry}
            name="Speakers"
          />
          <mesh
            material={materials.Cylinder}
            geometry={nodes.Rug.geometry}
            name="Rug"
          />
          {/*<mesh*/}
          {/*  material={materials.topCeiling}*/}
          {/*  geometry={nodes.topCeiling.geometry}*/}
          {/*  name="topCeiling"*/}
          {/*/>*/}
          <mesh
            material={materials.walls}
            geometry={nodes.Walls.geometry}
            name="Walls"
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILEURL, DRACO_URL);
