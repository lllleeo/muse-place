/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { DRACO_URL } from "spacesvr";

type GLTFResult = GLTF & {
  nodes: {
    fabric: THREE.Mesh;
    stitches: THREE.Mesh;
  };
  materials: {
    Fabric: THREE.MeshStandardMaterial;
    Noeud: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/PinkWhiteDurag-1613163610/pinkwhitedurag4.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL, DRACO_URL) as GLTFResult;

  materials.Fabric.metalness = 0.52;
  materials.Noeud.metalness = 0.25;

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" scale={[0.225, 0.225, 0.225]}>
        <group name="pinkwhite_durag">
          <mesh
            name="fabric"
            material={materials.Fabric}
            geometry={nodes.fabric.geometry}
          />
          <mesh
            name="stitches"
            material={materials.Noeud}
            geometry={nodes.stitches.geometry}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL, DRACO_URL);
