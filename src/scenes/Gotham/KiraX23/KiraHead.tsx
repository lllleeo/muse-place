/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { Color } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Genesis3Female_Shape: THREE.Mesh;
  };
  materials: {
    ["default"]: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/KiraX23-1608664980/model-head-kirax23.glb";

const SCALE = 0.4; //0.065

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;

  materials.default.wireframe = true;
  materials.default.color = new Color(0x00ff00);
  materials.default.emissive = new Color(0x00ff00);

  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={[SCALE, SCALE, SCALE]}>
        <mesh
          name="Genesis3Female_Shape"
          material={materials["default"]}
          geometry={nodes.Genesis3Female_Shape.geometry}
          position={[0.3323, 0.0694, 0]}
          rotation={[1.5045, 0, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
