/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useLayoutEffect, useMemo, useRef } from "react";
import { useGLTF } from "@react-three/drei";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { useLoader } from "@react-three/fiber";
import { useTrimeshCollision } from "spacesvr";
import { BufferGeometry } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Group_14_003: THREE.Mesh;
    Group_13_003: THREE.Mesh;
    Group_10_002: THREE.Mesh;
    Group_9_002: THREE.Mesh;
    Group_5_002: THREE.Mesh;
    Group_6_002: THREE.Mesh;
    Group_2_002: THREE.Mesh;
    Group_14_001: THREE.Mesh;
    Group_13_001: THREE.Mesh;
    Group_10_001: THREE.Mesh;
    Group_9_001: THREE.Mesh;
    Group_5_001: THREE.Mesh;
    Group_6_001: THREE.Mesh;
    Group_2_001: THREE.Mesh;
    Group_15_001: THREE.Mesh;
    Group_003: THREE.Mesh;
    Group_002: THREE.Mesh;
  };
  materials: {
    wire_177028149: THREE.MeshStandardMaterial;
    wire_028089177: THREE.MeshStandardMaterial;
    wire_224086086: THREE.MeshStandardMaterial;
    wire_006134006: THREE.MeshStandardMaterial;
    wire_087224198: THREE.MeshStandardMaterial;
    wire_224198087: THREE.MeshStandardMaterial;
    wire_229166215: THREE.MeshStandardMaterial;
    wire_134110008: THREE.MeshStandardMaterial;
    wire_134006006: THREE.MeshStandardMaterial;
    wire_143224087: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/desk-1618570146/desk.glb.gz";
const TEXTURE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/content/muse.place/balloonski/wood-min.jpg";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  // const hitbox = useRef<THREE.Mesh>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;

  const tex = useLoader(THREE.TextureLoader, TEXTURE_URL);
  const mat = new THREE.MeshBasicMaterial({ map: tex });

  // if (hitbox.current) {
  //   // eslint-disable-next-line react-hooks/rules-of-hooks
  //   useTrimeshCollision(
  //     // @ts-ignore
  //     (hitbox.current.geometry)
  //       .clone()
  //       .translate(2, -0.35, 4)
  //     // .scale(0.05, 0.035, 0.035)
  //     // .rotateY(-Math.PI/2)
  //   );
  // }

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="desk" position={[2, -0.35, 4]}>
          {/*<mesh position-y={0.5} ref={hitbox} name="hitbox">*/}
          {/*  <boxBufferGeometry args={[1.1, 1, 3.6]} />*/}
          {/*  <meshStandardMaterial color="blue" wireframe />*/}
          {/*</mesh>*/}
          <group
            scale={[0.05, 0.035, 0.035]}
            rotation-y={-Math.PI / 2}
            name="deskglb"
          >
            <mesh
              name="Group_14_003"
              material={mat}
              geometry={nodes.Group_14_003.geometry}
            />
            <mesh
              name="Group_13_003"
              material={mat}
              geometry={nodes.Group_13_003.geometry}
            />
            <mesh
              name="Group_10_002"
              material={mat}
              geometry={nodes.Group_10_002.geometry}
            />
            <mesh
              name="Group_9_002"
              material={mat}
              geometry={nodes.Group_9_002.geometry}
            />
            <mesh
              name="Group_5_002"
              material={mat}
              geometry={nodes.Group_5_002.geometry}
            />
            <mesh
              name="Group_6_002"
              material={mat}
              geometry={nodes.Group_6_002.geometry}
            />
            <mesh
              name="Group_2_002"
              material={mat}
              geometry={nodes.Group_2_002.geometry}
            />
            <mesh
              name="Group_14_001"
              material={mat}
              geometry={nodes.Group_14_001.geometry}
            />
            <mesh
              name="Group_13_001"
              material={mat}
              geometry={nodes.Group_13_001.geometry}
            />
            <mesh
              name="Group_10_001"
              material={mat}
              geometry={nodes.Group_10_001.geometry}
            />
            <mesh
              name="Group_9_001"
              material={mat}
              geometry={nodes.Group_9_001.geometry}
            />
            <mesh
              name="Group_5_001"
              material={mat}
              geometry={nodes.Group_5_001.geometry}
            />
            <mesh
              name="Group_6_001"
              material={mat}
              geometry={nodes.Group_6_001.geometry}
            />
            <mesh
              name="Group_2_001"
              material={mat}
              geometry={nodes.Group_2_001.geometry}
            />
            <mesh
              name="Group_15_001"
              material={mat}
              geometry={nodes.Group_15_001.geometry}
            />
            <mesh
              name="Group_003"
              material={mat}
              geometry={nodes.Group_003.geometry}
            />
            <mesh
              name="Group_002"
              material={mat}
              geometry={nodes.Group_002.geometry}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
