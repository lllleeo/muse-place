/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
// @ts-ignore
import { useGLTF } from "@react-three/drei";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    gator_money_cat_solid: THREE.Mesh;
  };
  materials: {
    ["Default OBJ"]: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/moneycat-1617165796/moneycat.glb.gz";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="RootNode" scale={[0.001, 0.001, 0.001]}>
          <group
            name="Light"
            position={[407.6245, 590.3862, -100.5454]}
            rotation={[1.8901, 0.8806, -2.0452]}
            scale={[100, 100, 100]}
          />
          <group
            name="Camera"
            position={[735.8892, 495.8309, 692.5791]}
            rotation={[Math.PI, 0.7559, 2.6801]}
            scale={[100, 100, 100]}
          />
          <mesh
            name="gator_money_cat_solid"
            material={materials["Default OBJ"]}
            geometry={nodes.gator_money_cat_solid.geometry}
            rotation={[-1.5812, 0, 0]}
            scale={[100, 100, 100]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
