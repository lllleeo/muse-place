/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useContext, useEffect, useMemo, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { Interactable, useTrimeshCollision } from "spacesvr";
import { ShopContext } from "../index";
import { BufferGeometry, MathUtils } from "three";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Plane146: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/register-1619748810/register.glb.gz";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;
  const { cart } = useContext(ShopContext);

  materials["Material"].metalness = cart.count > 0 ? 0 : 0.8;

  const [hovered, setHovered] = useState(false);

  const target = useRef(0);

  useFrame(() => {
    if (materials["Material"].metalness === target.current) return;

    materials["Material"].metalness = MathUtils.lerp(
      materials["Material"].metalness,
      target.current,
      0.08
    );
  });

  useEffect(() => {
    if (cart.count === 0) {
      target.current = 0.8;
    } else {
      if (hovered) {
        target.current = 0.3;
      } else {
        target.current = 0.5;
      }
    }
  }, [cart.count, hovered]);

  return (
    <group
      ref={group}
      dispose={null}
      position={[2, 0.55, 5.55]}
      rotation-y={-Math.PI - 0.3}
      scale={0.75}
      {...props}
    >
      <Interactable
        onClick={() => cart.checkout()}
        onHover={() => setHovered(true)}
        onUnHover={() => setHovered(false)}
      >
        <mesh position={[0, 0.225, 0.1]} name="hitbox">
          <boxBufferGeometry args={[0.67, 0.56, 0.65]} />
          <meshBasicMaterial opacity={0} transparent />
        </mesh>
      </Interactable>
      <group scale={2} name="Register2">
        <mesh
          name="Plane146"
          geometry={nodes.Plane146.geometry}
          material={materials.Material}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
