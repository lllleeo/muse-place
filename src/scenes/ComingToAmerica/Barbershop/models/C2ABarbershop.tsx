/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { DRACO_URL, useTrimeshCollision } from "spacesvr";
import { BufferGeometry } from "three";

type GLTFResult = GLTF & {
  nodes: {
    collider: THREE.Mesh;
    mesh: THREE.Mesh;
  };
  materials: {};
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/C2AIndoor-1612551200/indoor_01.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL, DRACO_URL) as GLTFResult;

  useTrimeshCollision(
    (nodes.collider.geometry as BufferGeometry)
      .clone()
      .scale(0.3, 0.3, 0.3)
      .translate(0, -0.2, 0)
  );

  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={[0.3, 0.3, 0.3]} position-y={-0.2}>
        {/*<mesh*/}
        {/*  name="collider"*/}
        {/*  material={nodes.collider.material}*/}
        {/*  geometry={nodes.collider.geometry}*/}
        {/*/>*/}
        <mesh
          name="mesh"
          material={nodes.mesh.material}
          geometry={nodes.mesh.geometry}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL, DRACO_URL);
