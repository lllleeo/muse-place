/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { DRACO_URL, useTrimeshCollision } from "spacesvr";
import { BufferGeometry } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Tube1: THREE.Mesh;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/collisions-1609480255/alto_collider_01.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes } = useGLTF(FILE_URL) as GLTFResult;

  useTrimeshCollision(
    (nodes.Tube1.geometry as BufferGeometry)
      .clone()
      .scale(3, 3, 3)
      .translate(0, 5, 0)
      .rotateY(Math.PI)
  );

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation-y={Math.PI} scale={[3, 3, 3]} position-y={5} />
    </group>
  );
}

useGLTF.preload(FILE_URL, DRACO_URL);
