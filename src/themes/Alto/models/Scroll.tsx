/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef, useState, useEffect } from "react";
import { useFrame } from "react-three-fiber";
import { useGLTF } from "@react-three/drei/useGLTF";

import { useAnimations } from "@react-three/drei/useAnimations";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder: THREE.Mesh;
    Plane: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
  };
};

type ActionName = "CylinderAction.003";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/scroll-1611302043/scroll24.glb\n";

export function play(actions: { [p: string]: THREE.AnimationAction }) {
  actions.jump.play();
  console.log("hello world");
}

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(FILE_URL) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Cylinder"
          material={materials.Material}
          geometry={nodes.Cylinder.geometry}
          position={[-0.1722, -0.0108, 0.0186]}
          rotation={[2.0655, 0, -Math.PI / 2]}
        >
          <mesh
            name="Plane"
            material={materials["Material.004"]}
            geometry={nodes.Plane.geometry}
            position={[0.0289, -0.2113, -1.0433]}
            rotation={[-Math.PI / 2, 1.5706, 0]}
            scale={[-0.995, -1.0057, -30.0817]}
          />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
